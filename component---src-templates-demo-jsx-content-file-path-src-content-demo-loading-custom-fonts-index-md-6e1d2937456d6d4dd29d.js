"use strict";(self.webpackChunkfabric_gatsby5=self.webpackChunkfabric_gatsby5||[]).push([[643],{866:function(e,t,n){n.r(t),n.d(t,{default:function(){return w}});var o=n(1151),a=n(7294),l=n(9703);function r(e,t){const n="url(https://fonts.gstatic.com/s/vt323/v17/pxiKyp0ihIEF2isfFJXUdVNF.woff2)",o="url(https://fonts.gstatic.com/s/pacifico/v22/FwZY7-Qmy14u9lezJ-6H6MmBp0u-.woff2)",a="url(https://fonts.gstatic.com/s/lato/v24/S6u8w4BMUTPHh30AXC-qNiXg7Q.woff2)",l="url(https://fonts.gstatic.com/s/lato/v24/S6u9w4BMUTPHh50XSwiPGQ3q5d0.woff2)",r=new t.Canvas(e),s=new FontFace("VT323",n,{style:"normal",weight:"normal"}),i=new FontFace("Pacifico",o,{style:"normal",weight:"normal"}),c=new FontFace("Lato",a,{style:"normal",weight:"100"}),d=new FontFace("Lato",l,{style:"normal",weight:"900"});Promise.all([s.load(),i.load(),c.load(),d.load()]).then((()=>{document.fonts.add(i),document.fonts.add(s),document.fonts.add(c),document.fonts.add(d);const e=new t.Textbox("Correctly loaded Pacifico",{left:50,top:10,width:200,fontSize:60,fontFamily:"Pacifico"}),n=new t.Textbox("Correctly loaded Pacifico",{left:350,top:10,width:200,fontSize:60,fontFamily:"VT323"}),o=new t.Textbox("Correctly loaded lato100",{left:350,top:310,width:200,fontSize:60,fontWeight:"100",fontFamily:"Lato"}),a=new t.Textbox("Correctly loaded lato900",{left:50,top:310,width:200,fontSize:60,fontWeight:"900",fontFamily:"Lato"});r.add(e,n,o,a)}))}function s(e){const t=Object.assign({p:"p",a:"a",strong:"strong",span:"span"},(0,o.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(t.p,null,"When working with custom fonts on a fabric canvas, it is recommended to\nuse the ",a.createElement(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/CSS_Font_Loading_API"},"CSS Font loader api"),".\nNot doing so will make your app do FOUT(s) (Flash of Unstyled Text).\nThis happens because font loading involve network and is async by nature, and so when you will be adding a text object with a custom font, or switching font, the canvas will try to render before the font has been actually loaded and so the browser will fallback on the specified fallback font or the default one."),"\n",a.createElement(t.p,null,"If for some reason your target browsers do not support that api yet you can pick from a selection of font preloading libraries like ",a.createElement(t.a,{href:"https://github.com/bramstein/fontfaceobserver"},"Font Face Observer")),"\n",a.createElement(t.p,null,"In this example we are using the browser native CSS Font loader api to load 2 google fonts from google's cdn.\nWe load the font, then we create a textbox and then use the loaded font family. Note that you could create the textbox, add them to canvas and just re-render when the font is loaded, doing so you would have saved in FabricJS cache some values calculated with the font not correctly loaded and likely ",a.createElement(t.strong,null,"have cursor positioning issues")," or ",a.createElement(t.strong,null,"wrong bounding boxes issues"),". Always assign the font family after the font has correctly loaded."),"\n",a.createElement(t.p,null,"When dealing with fonts with multiple weights and styles is easier to assign a different font family to each of them and just use different font families, in the example's code we do show how to load different weights with the same family name, but be aware that one font file has one family, one weight and one style. Loading the font ",a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">Lato</code>'}})," doesn't grant you access to all variants of the fonts, but just one. there is one file per variant."),"\n","\n",a.createElement(l.p,{code:r,canvasId:"c"},a.createElement("canvas",{width:"600",height:"600",id:"c"})))}var i=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,o.ah)(),e.components);return t?a.createElement(t,e,a.createElement(s,e)):s(e)},c=n(4160),d=n(6422),f=n(1202),h=n(6330),m=n(9680);function u(e){let{data:t,pageContext:n,children:o}=e;const{frontmatter:l,mdFile:r}=t.demoPage;return a.createElement(d.Z,null,a.createElement(m.Z,{title:l.title}),a.createElement("nav",{id:"breadcrumb-nav","aria-label":"breadcrumb"},a.createElement(c.rU,{to:"/demos"},"Demos")," > ",a.createElement("span",null,l.title)),a.createElement("h1",null,l.title),a.createElement("article",null,o),a.createElement(f.Z,{relativePath:r.relativePath}),a.createElement(h.Z,{prev:n.prev||{title:"All FabricJS demos",slug:"/demos"},next:n.next}))}function w(e){return a.createElement(u,e,a.createElement(i,e))}}}]);
//# sourceMappingURL=component---src-templates-demo-jsx-content-file-path-src-content-demo-loading-custom-fonts-index-md-6e1d2937456d6d4dd29d.js.map