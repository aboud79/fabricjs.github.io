{"componentChunkName":"component---src-templates-demo-jsx","path":"/demo/html5-video-element/","result":{"data":{"demoPage":{"html":"<div\r\n  class=\"codepen-later\"\r\n  data-editable=\"true\"\r\n  data-height=\"500\"\r\n  data-default-tab=\"result\"\r\n  data-prefill='{\r\n    \"scripts\": [\"https://unpkg.com/fabric@4.0.0-beta.12/dist/fabric.js\"]\r\n  }'\r\n>\r\n<pre data-lang=\"css\" data-options-autoprefixer=\"true\">\n</pre>\r\n<pre data-lang=\"html\">\r\n  <video height=\"360\" width=\"480\" id=\"video1\" style=\"display: none\" muted>\r\n    <source src=\"http://html5demos.com/assets/dizzy.mp4\">\r\n    <source src=\"http://html5demos.com/assets/dizzy.ogv\">\r\n  </video>\r\n  <video height=\"360\" width=\"500\" id=\"webcam\" style=\"display: none\"></video>\r\n  <canvas id=\"c\" width=\"1200\" height=\"700\" style=\"border:1px solid #ccc\"></canvas>\r\n</pre>\r\n<pre data-lang=\"js\">\r\nvar canvas = new fabric.Canvas('c');\r\nvar video1El = document.getElementById('video1');\r\nvar webcamEl = document.getElementById('webcam');\n<p>var video1 = new fabric.Image(video1El, {\r\nleft: 200,\r\ntop: 300,\r\nangle: -15,\r\noriginX: 'center',\r\noriginY: 'center',\r\nobjectCaching: false,\r\n});</p>\n<p>var webcam = new fabric.Image(webcamEl, {\r\nleft: 539,\r\ntop: 328,\r\nangle: 94.5,\r\noriginX: 'center',\r\noriginY: 'center',\r\nobjectCaching: false,\r\n});</p>\n<p>canvas.add(video1);\r\nvideo1.getElement().play();</p>\n<p>// Older browsers might not implement mediaDevices at all, so we set an empty object first\r\nif (navigator.mediaDevices === undefined) {\r\nnavigator.mediaDevices = {};\r\n}</p>\n<p>if (navigator.mediaDevices.getUserMedia === undefined) {\r\nnavigator.mediaDevices.getUserMedia = function(constraints) {</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\t// First get ahold of the legacy getUserMedia, if present\r\n\tvar getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\r\n\r\n\t// Some browsers just don't implement it - return a rejected promise with an error\r\n\t// to keep a consistent interface\r\n\tif (!getUserMedia) {\r\n\t\treturn Promise.reject(new Error('getUserMedia is not implemented in this browser'));\r\n\t}\r\n\r\n\t// Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\r\n\treturn new Promise(function(resolve, reject) {\r\n\t\tgetUserMedia.call(navigator, constraints, resolve, reject);\r\n\t});\r\n}</code></pre></div>\n<p>}</p>\n<p>// adding webcam video element\r\nnavigator.mediaDevices.getUserMedia({\r\nvideo: true\r\n})\r\n.then(function getWebcamAllowed(localMediaStream) {\r\nwebcamEl.srcObject = localMediaStream;</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\tcanvas.add(webcam);\r\n\twebcam.moveTo(0); // move webcam element to back of zIndex stack\r\n\twebcam.getElement().play();\r\n}).catch(function getWebcamNotAllowed(e) {\r\n\t// block will be hit if user selects \"no\" for browser \"allow webcam access\" prompt\r\n});</code></pre></div>\n<p>fabric.util.requestAnimFrame(function render() {\r\ncanvas.renderAll();\r\nfabric.util.requestAnimFrame(render);\r\n});\r\n</pre></p>\n</div>","frontmatter":{"title":"HTML5 &lt;video&gt; element"},"mdFile":{"relativePath":"demo/html5-video-element/index.md"}}},"pageContext":{"title":"HTML5 &lt;video&gt; element","slug":"/demo/html5-video-element","prev":{"title":"Free drawing","slug":"/demo/free-drawing"},"next":{"title":"Intersection","slug":"/demo/intersection"}}},"staticQueryHashes":["2748212769"],"slicesMap":{}}