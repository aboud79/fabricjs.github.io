{"componentChunkName":"component---src-templates-demo-jsx","path":"/demo/copy-and-paste/","result":{"data":{"demoPage":{"html":"<div\r\n  class=\"codepen-later\"\r\n  data-editable=\"true\"\r\n  data-height=\"500\"\r\n  data-default-tab=\"result\"\r\n  data-prefill='{\r\n    \"scripts\": [\"https://unpkg.com/fabric@4.0.0-rc.1/dist/fabric.js\", \"https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.15/lodash.js\"]\r\n  }'\r\n>\r\n<pre data-lang=\"css\" data-options-autoprefixer=\"true\">\r\n.controls {\r\n  display: inline-block;\r\n}\r\n</pre>\r\n<pre data-lang=\"html\">\r\n  <canvas id=\"c\" width=\"500\" height=\"500\" style=\"border:1px solid #ccc\"></canvas>\r\n  <div class=\"controls\">\r\n    <p>\r\n      <button id=\"copy\" onclick=\"Copy()\">Copy Selected Objects</button>\r\n    </p>\r\n    <p>\r\n      <button id=\"paste\" onclick=\"Paste()\">Paste Selected Objects</button>\r\n    </p>\r\n  </div>\r\n</pre>\r\n<pre data-lang=\"js\">\r\nfunction Copy() {\r\n\t// clone what are you copying since you\r\n\t// may want copy and paste on different moment.\r\n\t// and you do not want the changes happened\r\n\t// later to reflect on the copy.\r\n\tcanvas.getActiveObject().clone(function(cloned) {\r\n\t\t_clipboard = cloned;\r\n\t});\r\n}\n<p>function Paste() {\r\n// clone again, so you can do multiple copies.\r\n_clipboard.clone(function(clonedObj) {\r\ncanvas.discardActiveObject();\r\nclonedObj.set({\r\nleft: clonedObj.left + 10,\r\ntop: clonedObj.top + 10,\r\nevented: true,\r\n});\r\nif (clonedObj.type === 'activeSelection') {\r\n// active selection needs a reference to the canvas.\r\nclonedObj.canvas = canvas;\r\nclonedObj.forEachObject(function(obj) {\r\ncanvas.add(obj);\r\n});\r\n// this should solve the unselectability\r\nclonedObj.setCoords();\r\n} else {\r\ncanvas.add(clonedObj);\r\n}\r\n_clipboard.top += 10;\r\n_clipboard.left += 10;\r\ncanvas.setActiveObject(clonedObj);\r\ncanvas.requestRenderAll();\r\n});\r\n}\r\nvar canvas = this.__canvas = new fabric.Canvas('c');\r\n// create a rectangle object\r\nvar rect = new fabric.Rect({\r\nleft: 100,\r\ntop: 50,\r\nfill: '#D81B60',\r\nwidth: 100,\r\nheight: 100,\r\nstrokeWidth: 2,\r\nstroke: \"#880E4F\",\r\nrx: 10,\r\nry: 10,\r\nangle: 45,\r\nhasControls: true\r\n});</p>\n<p>canvas.add(rect);</p>\n<p>// create a rectangle object\r\nvar rect2 = new fabric.Rect({\r\nleft: 200,\r\ntop: 50,\r\nfill: '#F06292',\r\nwidth: 100,\r\nheight: 100,\r\nstrokeWidth: 2,\r\nstroke: \"#880E4F\",\r\nrx: 10,\r\nry: 10,\r\nangle: 45,\r\nhasControls: true\r\n});</p>\n<p>canvas.add(rect2);</p>\n<p>var circle1 = new fabric.Circle({\r\nradius: 65,\r\nfill: '#039BE5',\r\nleft: 0\r\n});</p>\n<p>var circle2 = new fabric.Circle({\r\nradius: 65,\r\nfill: '#4FC3F7',\r\nleft: 110,\r\nopacity: 0.7\r\n});</p>\n<p>var group = new fabric.Group([circle1, circle2, ], {\r\nleft: 40,\r\ntop: 250\r\n});</p>\n<p>canvas.add(group);\r\n</pre></p>\n</div>","frontmatter":{"title":"Copy and paste"},"mdFile":{"relativePath":"demo/copy-and-paste/index.md"}}},"pageContext":{"title":"Copy and paste","slug":"/demo/copy-and-paste","prev":{"title":"Clipping and masking","slug":"/demo/clipping"},"next":{"title":"Custom controls","slug":"/demo/custom-controls"}}},"staticQueryHashes":["2748212769"],"slicesMap":{}}