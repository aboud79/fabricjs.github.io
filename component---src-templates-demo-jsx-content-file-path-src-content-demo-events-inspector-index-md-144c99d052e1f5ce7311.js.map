{"version":3,"file":"component---src-templates-demo-jsx-content-file-path-src-content-demo-events-inspector-index-md-144c99d052e1f5ce7311.js","mappings":"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","sources":["webpack://fabric-gatsby5/./src/content/demo/events-inspector/EventInspectorUI.jsx","webpack://fabric-gatsby5/./src/content/demo/events-inspector/index.md","webpack://fabric-gatsby5/./src/templates/demo.jsx","webpack://fabric-gatsby5/./src/components/githubEditLink/githubEditLink.jsx","webpack://fabric-gatsby5/./src/components/layoutFullWidth.jsx","webpack://fabric-gatsby5/./src/components/prevNextPostLinks/prevNextLinks.jsx","webpack://fabric-gatsby5/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport * as fabric from 'fabric';\nimport './index.css';\n\n// old html demo converted to a component without adapting the code to react.\n\nexport const EventInspectorUI = () => {\n  useEffect(() => {\n    [\n      'toggle',\n      'move',\n      'dragover',\n      'canvas_events',\n      'green',\n      'red',\n      'blue',\n      'black',\n    ].forEach((id) => {\n      document.getElementById(id).checked = true;\n    });\n  });\n\n  useEffect(() => {\n    fabric.Object.prototype.transparentCorners = false;\n    var canvas2 = new fabric.Canvas('c1');\n    canvas2.add(\n      new fabric.Rect({\n        width: 50,\n        height: 50,\n        fill: 'red',\n        top: 100,\n        left: 100,\n      })\n    );\n    canvas2.add(\n      new fabric.Rect({\n        width: 30,\n        height: 30,\n        fill: 'green',\n        top: 50,\n        left: 50,\n      })\n    );\n    canvas2.add(\n      new fabric.Circle({ radius: 20, fill: 'blue', top: 160, left: 140 })\n    );\n    canvas2.add(\n      new fabric.Textbox('Textbox', { fill: 'black', top: 70, left: 200 })\n    );\n\n    var log2 = document.getElementById('log1');\n    var clearButton = document.getElementById('clear_log');\n    clearButton.onclick = function () {\n      log2.innerHTML = '&nbsp;';\n    };\n\n    function log(message, opt, color) {\n      if (!getCheckbox(message, !!color)?.checked) {\n        return;\n      }\n      if (color && !document.getElementById(color).checked) {\n        return;\n      }\n      getCheckboxLabel(message, !!color)?.classList.add('bold');\n      var el = document.createElement('div');\n      el.classList.add('log-entry');\n      el.setAttribute('event', message);\n      el.setAttribute('object', !!color);\n      if (color) {\n        el.style.color = color;\n      }\n      var code = document.createElement('code');\n      code.innerText = JSON.stringify(opt, null, '\\t');\n      code.setAttribute('hidden', true);\n      var button = document.createElement('button');\n      button.innerHTML = '+';\n      button.onclick = function (ev) {\n        if (code.hasAttribute('hidden')) {\n          code.removeAttribute('hidden');\n          button.innerHTML = '-';\n        } else {\n          code.setAttribute('hidden', '');\n          button.innerHTML = '+';\n        }\n      };\n      var m = document.createElement('strong');\n      m.innerHTML = message;\n      var t = document.createElement('small');\n      t.innerHTML = '\\n' + new Date().toISOString();\n      el.append(button, m, document.createElement('br'), code, t);\n      log2.insertBefore(el, log2.firstChild);\n      var children = log2.children;\n      while (children[100]) {\n        var child = children[100];\n        log2.removeChild(child);\n      }\n    }\n\n    function toggleLogs(eventName, obj, value) {\n      log2\n        .querySelectorAll(\n          'div[event = \"' + eventName + '\"][object = \"' + !!obj + '\"]'\n        )\n        .forEach((el) => el.classList.toggle('hidden', !value));\n    }\n    function getEventdescriptor(eventName, obj) {\n      return document.querySelector(\n        'div[event = \"' + eventName + '\"][object = \"' + !!obj + '\"]'\n      );\n    }\n    function getCheckbox(eventName, obj) {\n      return getEventdescriptor(eventName, obj)?.querySelector(\n        'input[type = checkbox]'\n      );\n    }\n    function getCheckboxLabel(eventName, obj) {\n      return getEventdescriptor(eventName, obj)?.querySelector('label');\n    }\n\n    function toggleCheckbox(eventName, obj, value) {\n      var checkbox = getCheckbox(eventName, obj);\n      if (checkbox) {\n        checkbox.checked = value;\n        checkbox.classList.remove('bold');\n      }\n      toggleLogs(eventName, obj, value);\n      return checkbox;\n    }\n\n    function toggleMovementEvents() {\n      var events = [\n        'mouse:move',\n        'mousemove',\n        'mouse:move:before',\n        'mousemove:before',\n        'moving',\n        'object:moving',\n      ];\n      events.forEach((ev) => {\n        toggleCheckbox(ev, true, this.checked);\n        toggleCheckbox(ev, false, this.checked);\n      });\n    }\n    function toggleDragOverEvents() {\n      toggleCheckbox('dragover', true, this.checked);\n      toggleCheckbox('dragover', false, this.checked);\n    }\n    function toggleCanvasEvents() {\n      Object.keys(canvas2.__eventListeners).forEach((ev) => {\n        toggleCheckbox(ev, false, this.checked);\n      });\n    }\n    function toggleAll() {\n      document\n        .querySelectorAll('div[event] > input[type = checkbox]')\n        .forEach((checkbox) => (checkbox.checked = this.checked));\n    }\n    document\n      .getElementById('move')\n      .addEventListener('change', toggleMovementEvents);\n    document\n      .getElementById('dragover')\n      .addEventListener('change', toggleDragOverEvents);\n    document\n      .getElementById('canvas_events')\n      .addEventListener('change', toggleCanvasEvents);\n    document.getElementById('toggle').addEventListener('change', toggleAll);\n\n    let id = 0;\n    function createEventDescriptor(eventName, obj) {\n      var para = document.createElement('div');\n      var checkbox = document.createElement('input');\n      checkbox.id = 'checkbox_' + ++id;\n      checkbox.type = 'checkbox';\n      checkbox.checked = true;\n      checkbox.onchange = () => {\n        checkbox.classList.remove('bold');\n        toggleLogs(eventName, obj, checkbox.checked);\n      };\n      para.setAttribute('event', eventName);\n      para.setAttribute('object', !!obj);\n      var label = document.createElement('label');\n      label.appendChild(document.createTextNode(eventName));\n      label.htmlFor = checkbox.id;\n      para.append(checkbox, label);\n      return para;\n    }\n\n    function logObservingEvent(eventName) {\n      var el = document.getElementById('observing-events-log');\n      el.appendChild(createEventDescriptor(eventName));\n    }\n\n    function logNonObservingEvent(eventName) {\n      var el = document.getElementById('non-observing-events-log');\n      el.appendChild(createEventDescriptor(eventName));\n    }\n\n    function logObservingEventObj(eventName) {\n      var el = document.getElementById('observing-events-log-obj');\n      el.appendChild(createEventDescriptor(eventName, true));\n    }\n\n    function addSeparator(id) {\n      document.getElementById(id).appendChild(document.createElement('br'));\n    }\n\n    function observe(eventName, nonobserving) {\n      nonobserving\n        ? logNonObservingEvent(eventName)\n        : logObservingEvent(eventName);\n      canvas2.on(eventName, function (opt) {\n        log(eventName, opt);\n      });\n    }\n\n    function observeObj(eventName) {\n      logObservingEventObj(eventName);\n      canvas2.getObjects().forEach(function (o) {\n        o.on(eventName, function (opt) {\n          log(eventName, opt, o.fill);\n        });\n      });\n    }\n\n    observe('object:modified');\n    addSeparator('observing-events-log');\n\n    observe('object:moving');\n    observe('object:scaling');\n    observe('object:rotating');\n    observe('object:skewing');\n    observe('object:resizing');\n    addSeparator('observing-events-log');\n\n    observe('before:transform');\n    observe('before:selection:cleared');\n    observe('selection:cleared');\n    observe('selection:created');\n    observe('selection:updated');\n    addSeparator('observing-events-log');\n\n    observe('mouse:up');\n    observe('mouse:down');\n    observe('mouse:move');\n    observe('mouse:up:before');\n    observe('mouse:down:before');\n    observe('mouse:move:before');\n    observe('mouse:dblclick');\n    observe('mouse:wheel');\n    observe('mouse:over');\n    observe('mouse:out');\n    addSeparator('observing-events-log');\n\n    observe('drop:before');\n    observe('drop');\n    observe('dragover');\n    observe('dragenter');\n    observe('dragleave');\n    addSeparator('observing-events-log');\n\n    observe('after:render');\n    addSeparator('observing-events-log');\n\n    observe('path:created', true);\n    observe('object:added', true);\n    observe('object:removed', true);\n    addSeparator('observing-events-log');\n\n    observeObj('moving');\n    observeObj('scaling');\n    observeObj('rotating');\n    observeObj('skewing');\n    observeObj('resizing');\n    addSeparator('observing-events-log-obj');\n\n    observeObj('mouseup');\n    observeObj('mousedown');\n    observeObj('mousemove');\n    observeObj('mouseup:before');\n    observeObj('mousedown:before');\n    observeObj('mousemove:before');\n    observeObj('mousedblclick');\n    observeObj('mousewheel');\n    observeObj('mouseover');\n    observeObj('mouseout');\n    addSeparator('observing-events-log-obj');\n\n    observeObj('drop:before');\n    observeObj('drop');\n    observeObj('dragover');\n    observeObj('dragenter');\n    observeObj('dragleave');\n  }, []);\n\n  return (\n    <>\n      <div className=\"demo-main\">\n        <div className=\"column-main\">\n          <p>To avoid event spamming, you can disable the checkboxs below.</p>\n          <div>\n            <label htmlFor=\"toggle\">\n              <input type=\"checkbox\" id=\"toggle\" />\n              All events\n            </label>\n\n            <label htmlFor=\"move\">\n              <input type=\"checkbox\" id=\"move\" />\n              Movement events\n            </label>\n            <label htmlFor=\"dragover\">\n              <input type=\"checkbox\" id=\"dragover\" />\n              DragOver\n            </label>\n\n            <label htmlFor=\"canvas_events\">\n              <input type=\"checkbox\" id=\"canvas_events\" />\n              Canvas\n            </label>\n\n            <label htmlFor=\"green\">\n              <input type=\"checkbox\" id=\"green\" />\n              Green\n            </label>\n\n            <label htmlFor=\"red\">\n              <input type=\"checkbox\" id=\"red\" />\n              Red\n            </label>\n\n            <label htmlFor=\"blue\">\n              <input type=\"checkbox\" id=\"blue\" />\n              Blue\n            </label>\n\n            <label htmlFor=\"black\">\n              <input type=\"checkbox\" id=\"black\" />\n              Black\n            </label>\n          </div>\n\n          <div className=\"demo-body\">\n            <canvas id=\"c1\" width=\"400\" height=\"400\"></canvas>\n            <div>\n              Drag me on the canvas\n              <br />\n              <br />\n              <div\n                id=\"drag-me\"\n                draggable=\"true\"\n                onDragStart={(event) =>\n                  event.dataTransfer.setData('text/plain', '')\n                }\n              ></div>\n            </div>\n          </div>\n          <div id=\"log1\">&nbsp;</div>\n          <button id=\"clear_log\">clear log</button>\n        </div>\n        <div className=\"column-events\">\n          <div id=\"observing-events-log\">\n            <strong>Observing these events</strong>\n          </div>\n        </div>\n        <div className=\"column-events\">\n          <div id=\"observing-events-log-obj\">\n            <strong>Objects events</strong>\n          </div>\n          <div id=\"non-observing-events-log\">\n            <strong>Other available events</strong>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {EventInspectorUI} from './EventInspectorUI';\nfunction _createMdxContent(props) {\n  return React.createElement(EventInspectorUI);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/fabricjs.github.io/fabricjs.github.io/src/content/demo/events-inspector/index.md\";\nimport React from 'react';\nimport {graphql, Link} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport LayoutFullWidth from '../components/layoutFullWidth';\nimport GithubEditLink from '../components/githubEditLink/githubEditLink';\nimport PrevNextLinks from '../components/prevNextPostLinks/prevNextLinks';\nimport Seo from '../components/seo';\nfunction Demo({data, pageContext, children}) {\n  const {frontmatter, mdFile} = data.demoPage;\n  return React.createElement(LayoutFullWidth, null, React.createElement(Seo, {\n    title: frontmatter.title\n  }), React.createElement(\"nav\", {\n    id: \"breadcrumb-nav\",\n    \"aria-label\": \"breadcrumb\"\n  }, React.createElement(Link, {\n    to: \"/demos\"\n  }, \"Demos\"), \" > \", React.createElement(\"span\", null, frontmatter.title)), React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"article\", null, children), React.createElement(GithubEditLink, {\n    relativePath: mdFile.relativePath\n  }), React.createElement(PrevNextLinks, {\n    prev: pageContext.prev || ({\n      title: 'All FabricJS demos',\n      slug: '/demos'\n    }),\n    next: pageContext.next\n  }));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Demo, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($slug: String!) {\n    demoPage: mdx(fields: { slug: { eq: $slug } }) {\n      frontmatter {\n        title\n      }\n      mdFile: parent {\n        ... on File {\n          relativePath\n        }\n      }\n    }\n  }\n`;\nDemo.propTypes = {\n  data: PropTypes.shape({\n    demoPage: PropTypes.object\n  }).isRequired,\n  children: PropTypes.any,\n  pageContext: PropTypes.shape({\n    prev: PropTypes.shape({\n      title: PropTypes.string,\n      slug: PropTypes.string\n    }),\n    next: PropTypes.shape({\n      title: PropTypes.string,\n      slug: PropTypes.string\n    })\n  }).isRequired\n};\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function GithubEditLink({ relativePath }) {\n  return (\n    <a\n      className=\"github-edit-link\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      href={`https://github.com/fabricjs/fabricjs.github.io/tree/development/src/content/${relativePath}`}\n    >\n      Edit this page on Github\n    </a>\n  )\n}\n\nGithubEditLink.propTypes = {\n  relativePath: PropTypes.string.isRequired,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Header from './header/header'\nimport Footer from './footer/footer'\n\nexport default function Layout({ children, darkBg }) {\n  return (\n    <>\n      <Header />\n      <main className={darkBg ? 'darkBg' : ''}>{children}</main>\n      <Footer />\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  darkBg: PropTypes.bool,\n}\n\nLayout.defaultProps = {\n  darkBg: false,\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport './prevNextLinks.css'\n\nexport default function PrevNextLinks({ prev, next }) {\n  return (\n    <nav id=\"prevNextPostLinks\">\n      {(prev || next) && (\n        <ul>\n          {prev && (\n            <li className=\"prevPost\">\n              <Link to={prev.slug}>{prev.title}</Link>\n            </li>\n          )}\n          {next && (\n            <li className=\"nextPost\">\n              <Link to={next.slug}>{next.title}</Link>\n            </li>\n          )}\n        </ul>\n      )}\n    </nav>\n  )\n}\n\nPrevNextLinks.propTypes = {\n  prev: PropTypes.shape({\n    title: PropTypes.string,\n    slug: PropTypes.string,\n  }),\n  next: PropTypes.shape({\n    title: PropTypes.string,\n    slug: PropTypes.string,\n  }),\n}\n\nPrevNextLinks.defaultProps = {\n  prev: null,\n  next: null,\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["EventInspectorUI","useEffect","forEach","id","document","getElementById","checked","fabric","prototype","transparentCorners","canvas2","add","width","height","fill","top","left","radius","log2","log","message","opt","color","_getCheckbox","_getCheckboxLabel","getCheckbox","_getEventdescriptor2","getEventdescriptor","querySelector","classList","el","createElement","setAttribute","style","code","innerText","JSON","stringify","button","innerHTML","onclick","ev","hasAttribute","removeAttribute","m","t","Date","toISOString","append","insertBefore","firstChild","children","child","removeChild","toggleLogs","eventName","obj","value","querySelectorAll","toggle","_getEventdescriptor","toggleCheckbox","checkbox","remove","addEventListener","this","Object","keys","__eventListeners","createEventDescriptor","para","type","onchange","label","appendChild","createTextNode","htmlFor","addSeparator","observe","nonobserving","logNonObservingEvent","logObservingEvent","on","observeObj","logObservingEventObj","getObjects","o","React","className","draggable","onDragStart","event","dataTransfer","setData","_createMdxContent","props","wrapper","MDXLayout","assign","_provideComponents","components","Demo","_ref","data","pageContext","frontmatter","mdFile","demoPage","LayoutFullWidth","Seo","title","Link","to","GithubEditLink","relativePath","PrevNextLinks","prev","slug","next","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","target","rel","href","Layout","darkBg","Header","Footer","defaultProps","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}