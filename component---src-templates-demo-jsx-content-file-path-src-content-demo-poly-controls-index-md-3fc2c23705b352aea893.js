"use strict";(self.webpackChunkfabric_gatsby5=self.webpackChunkfabric_gatsby5||[]).push([[334],{7029:function(n,a,t){t.r(a),t.d(a,{default:function(){return k}});var e=t(1151),s=t(7294),o=t(8948);const p="\n  const canvas = new fabric.Canvas(canvasEl);\n\n  const points = [\n    {\n      x: 3,\n      y: 4,\n    },\n    {\n      x: 16,\n      y: 3,\n    },\n    {\n      x: 30,\n      y: 5,\n    },\n    {\n      x: 25,\n      y: 55,\n    },\n    {\n      x: 19,\n      y: 44,\n    },\n    {\n      x: 15,\n      y: 30,\n    },\n    {\n      x: 15,\n      y: 55,\n    },\n    {\n      x: 9,\n      y: 55,\n    },\n    {\n      x: 6,\n      y: 53,\n    },\n    {\n      x: -2,\n      y: 55,\n    },\n    {\n      x: -4,\n      y: 40,\n    },\n    {\n      x: 0,\n      y: 20,\n    },\n  ];\n\n  const poly = new fabric.Polygon(points, {\n    left: 200,\n    top: 50,\n    fill: '#D81B60',\n    strokeWidth: 4,\n    stroke: 'green',\n    scaleX: 5,\n    scaleY: 5,\n    objectCaching: false,\n    transparentCorners: false,\n    cornerColor: 'blue',\n  });\n  canvas.viewportTransform = [0.7, 0, 0, 0.7, -50, 50];\n  canvas.add(poly);\n\n  let editing = false;\n  poly.on('mousedblclick', () => {\n    editing = !editing;\n    if (editing) {\n      poly.cornerStyle = 'circle';\n      poly.cornerColor = 'rgba(0,0,255,0.5)';\n      poly.hasBorders = false;\n      poly.controls = fabric.controlsUtils.createPolyControls(points.length);\n    } else {\n      poly.cornerColor = 'blue';\n      poly.cornerStyle = 'rect';\n      poly.hasBorders = true;\n      poly.controls = fabric.controlsUtils.createObjectDefaultControls();\n    }\n    canvas.requestRenderAll();\n  });\n";function c(n){const a=Object.assign({p:"p",span:"span"},(0,e.ah)(),n.components);return s.createElement(s.Fragment,null,s.createElement(a.p,null,"This demo shows how to use the controls api to do something like changing the shape of a polygon.\nThis is generally harder to grasp because require understanding the internal polygon logic,\nanchor points and transformations."),"\n",s.createElement(a.p,null,"In the demo the canvas has zoom and translation, so we are sure our code is generic enough.\nThe polygon is given some big strokeWidth for the same reason."),"\n",s.createElement(a.p,null,"We have a function that trigger the ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-none">edit mode</code>'}}),".\nWhen we enter in edit mode we create one new control for each polygon point.\nTo those controls we attach a property, called point index, to remember to which point they are bound to."),"\n",s.createElement(a.p,null,"Those controls use their own custom position handler: ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-none">polygonPositionHandler</code>'}}),". This function\nlook at the pointIndex of the control and return the current canvas position for that particular point.\nIn this way interaction and rendering are done."),"\n",s.createElement(a.p,null,"To make the actual control change the current point, we need to write a custom action handler."),"\n",s.createElement(a.p,null,"Changing a point position is actually easy:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">fabricObject<span class="token punctuation">.</span>points<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">=</span> number<span class="token punctuation">;</span>\nfabricObject<span class="token punctuation">.</span>points<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">=</span> number<span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(a.p,null,"The hard part is handling the object that change dimensions while mantaining the correct position."),"\n",s.createElement(a.p,null,"We need an anchor point. We choose to fix the polygon position on the actual position of any point of the points array that is not the one that we are dragging."),"\n",s.createElement(a.p,null,"So having chosen the point, we calculate its actual absolute position:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">var</span> absolutePoint <span class="token operator">=</span> fabric<span class="token punctuation">.</span>util<span class="token punctuation">.</span><span class="token function">transformPoint</span><span class="token punctuation">(</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">x</span><span class="token operator">:</span> fabricObject<span class="token punctuation">.</span>points<span class="token punctuation">[</span>anchorIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">-</span> fabricObject<span class="token punctuation">.</span>pathOffset<span class="token punctuation">.</span>x<span class="token punctuation">,</span>\n    <span class="token literal-property property">y</span><span class="token operator">:</span> fabricObject<span class="token punctuation">.</span>points<span class="token punctuation">[</span>anchorIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">-</span> fabricObject<span class="token punctuation">.</span>pathOffset<span class="token punctuation">.</span>y<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  fabricObject<span class="token punctuation">.</span><span class="token function">calcTransformMatrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(a.p,null,"We will use this absolute position after we have modified the polygon."),"\n",s.createElement(a.p,null,"Then we swap the dragged point with the new one, we recalculate the width/height and pathOffset of the polygon ( basically we reinitialize its dimensions )."),"\n",s.createElement(a.p,null,"Now to keep its position steady, we want to know the point that represent the anchor point, in what position is now relative to polygon size."),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">var</span> newX <span class="token operator">=</span> <span class="token punctuation">(</span>fabricObject<span class="token punctuation">.</span>points<span class="token punctuation">[</span>anchorIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">-</span> fabricObject<span class="token punctuation">.</span>pathOffset<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">/</span> fabricObject<span class="token punctuation">.</span>width<span class="token punctuation">,</span>\n  newY <span class="token operator">=</span> <span class="token punctuation">(</span>fabricObject<span class="token punctuation">.</span>points<span class="token punctuation">[</span>anchorIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">-</span> fabricObject<span class="token punctuation">.</span>pathOffset<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">/</span> fabricObject<span class="token punctuation">.</span>height<span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(a.p,null,"Now newX and newY represent the point position with a range from -0.5 to 0.5 for X and Y.\nFabric supports numeric origins for objects with a range from 0 to 1. This let us use the relative position as an origin to translate the old absolutePoint we find before."),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">fabricObject<span class="token punctuation">.</span><span class="token function">setPositionByOrigin</span><span class="token punctuation">(</span>absolutePoint<span class="token punctuation">,</span> newX <span class="token operator">+</span> <span class="token number">0.5</span><span class="token punctuation">,</span> newY <span class="token operator">+</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(a.p,null,"In the below canvas, use the classic controls to scale and rotate the polygon, use a double click to switch back and forth in polygon editing mode. Once in polygon editing mode, you can drag point of the polygon around with an orchestrated user experience that feels correct."),"\n",s.createElement(o.p,{code:p,canvasId:"canvas"},s.createElement("canvas",{id:"canvas",width:"500",height:"500"})))}var l=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,e.ah)(),n.components);return a?s.createElement(a,n,s.createElement(c,n)):c(n)},r=t(4160),i=t(6422),u=t(1202),h=t(6330),d=t(2059);function g(n){let{data:a,pageContext:t,children:e}=n;const{frontmatter:o,mdFile:p}=a.demoPage;return s.createElement(i.Z,null,s.createElement(d.Z,{title:o.title}),s.createElement("nav",{id:"breadcrumb-nav","aria-label":"breadcrumb"},s.createElement(r.rU,{to:"/demos"},"Demos")," > ",s.createElement("span",null,o.title)),s.createElement("h1",null,o.title),s.createElement("article",null,e),s.createElement(u.Z,{relativePath:p.relativePath}),s.createElement(h.Z,{prev:t.prev||{title:"All FabricJS demos",slug:"/demos"},next:t.next}))}function k(n){return s.createElement(g,n,s.createElement(l,n))}}}]);
//# sourceMappingURL=component---src-templates-demo-jsx-content-file-path-src-content-demo-poly-controls-index-md-3fc2c23705b352aea893.js.map