{"version":3,"file":"component---src-templates-demo-jsx-content-file-path-src-content-demo-free-drawing-index-md-eb2face5cd68c445a1a3.js","mappings":"0LAAO,MAAMA,EAAI,svL,cCGV,MAAMC,EAAgBA,MAC3BC,EAAAA,EAAAA,YAAU,KACRC,SAASC,eAAe,sBAAsBC,MAAQ,KACtDF,SAASC,eAAe,iBAAiBC,MAAQ,UACjDF,SAASC,eAAe,wBAAwBC,MAAQ,UACxDF,SAASC,eAAe,wBAAwBC,MAAQ,IACxDF,SAASC,eAAe,yBAAyBC,MAAQ,GAAG,GAC3D,IACI,MCJT,SAASC,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,MACFC,EAAAA,EAAAA,MAAsBL,EAAMM,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBC,EAAAA,EAAY,CAC/Ef,KAAMA,EACNgB,SAAU,KACTF,EAAAA,cAAoB,MAAO,CAC5BG,UAAW,aACVH,EAAAA,cAAoB,SAAU,CAC/BI,GAAI,IACJC,MAAO,MACPC,OAAQ,QACNN,EAAAA,cAAoB,MAAO,CAC7BI,GAAI,wBACHJ,EAAAA,cAAoB,SAAU,CAC/BI,GAAI,eACJD,UAAW,gBACV,uBAAwBH,EAAAA,cAAoB,SAAU,CACvDI,GAAI,eACJD,UAAW,gBACV,SAAUH,EAAAA,cAAoB,QAAS,CACxCO,QAAS,yBACRP,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,SAAUG,EAAAA,cAAoB,SAAU,CAClFI,GAAI,yBACHJ,EAAAA,cAAoB,SAAU,KAAM,UAAWA,EAAAA,cAAoB,SAAU,KAAM,UAAWA,EAAAA,cAAoB,SAAU,KAAM,SAAUA,EAAAA,cAAoB,SAAU,KAAM,WAAYA,EAAAA,cAAoB,SAAU,KAAM,SAAUA,EAAAA,cAAoB,SAAU,KAAM,SAAUA,EAAAA,cAAoB,SAAU,KAAM,UAAWA,EAAAA,cAAoB,SAAU,KAAM,WAAYA,EAAAA,cAAoB,SAAU,KAAM,aAAcA,EAAAA,cAAoB,QAAS,CACvcO,QAAS,sBACRP,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,gBAAiBG,EAAAA,cAAoB,OAAQ,CACvFG,UAAW,QACV,OAAQH,EAAAA,cAAoB,QAAS,CACtCQ,KAAM,QACNC,IAAK,IACLC,IAAK,MACLN,GAAI,wBACDJ,EAAAA,cAAoB,QAAS,CAChCO,QAAS,iBACRP,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,eAAgBG,EAAAA,cAAoB,QAAS,CACvFQ,KAAM,QACNJ,GAAI,mBACDJ,EAAAA,cAAoB,QAAS,CAChCO,QAAS,wBACRP,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,iBAAkBG,EAAAA,cAAoB,QAAS,CACzFQ,KAAM,QACNJ,GAAI,0BACDJ,EAAAA,cAAoB,QAAS,CAChCO,QAAS,wBACRP,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,kBAAmBG,EAAAA,cAAoB,OAAQ,CACzFG,UAAW,QACV,MAAOH,EAAAA,cAAoB,QAAS,CACrCQ,KAAM,QACNC,IAAK,IACLC,IAAK,KACLN,GAAI,0BACDJ,EAAAA,cAAoB,QAAS,CAChCO,QAAS,yBACRP,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,mBAAoBG,EAAAA,cAAoB,OAAQ,CAC1FG,UAAW,QACV,MAAOH,EAAAA,cAAoB,QAAS,CACrCQ,KAAM,QACNC,IAAK,IACLC,IAAK,KACLN,GAAI,8BACE,KAAMJ,EAAAA,cAAoBb,GACpC,CAKA,MAJA,SAAoBM,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOkB,QAASC,GAAajB,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,MAAsBL,EAAMM,YAC3E,OAAOa,EAAYZ,EAAAA,cAAoBY,EAAWnB,EAAOO,EAAAA,cAAoBR,EAAmBC,IAAUD,EAAkBC,EAC9H,E,kDClEA,SAASoB,EAAIC,GAAgC,IAA/B,KAACC,EAAI,YAAEC,EAAW,SAAEC,GAASH,EACzC,MAAM,YAACI,EAAW,OAAEC,GAAUJ,EAAKK,SACnC,OAAOpB,EAAAA,cAAoBqB,EAAAA,EAAiB,KAAMrB,EAAAA,cAAoBsB,EAAAA,EAAK,CACzEC,MAAOL,EAAYK,QACjBvB,EAAAA,cAAoB,MAAO,CAC7BI,GAAI,iBACJ,aAAc,cACbJ,EAAAA,cAAoBwB,EAAAA,GAAM,CAC3BC,GAAI,UACH,SAAU,MAAOzB,EAAAA,cAAoB,OAAQ,KAAMkB,EAAYK,QAASvB,EAAAA,cAAoB,KAAM,KAAMkB,EAAYK,OAAQvB,EAAAA,cAAoB,UAAW,KAAMiB,GAAWjB,EAAAA,cAAoB0B,EAAAA,EAAgB,CACjNC,aAAcR,EAAOQ,eACnB3B,EAAAA,cAAoB4B,EAAAA,EAAe,CACrCC,KAAMb,EAAYa,MAAS,CACzBN,MAAO,qBACPO,KAAM,UAERC,KAAMf,EAAYe,OAEtB,CACe,SAASC,EAAiBvC,GACvC,OAAOO,EAAAA,cAAoBa,EAAMpB,EAAOO,EAAAA,cAAoBiC,EAAqBxC,GACnF,C","sources":["webpack://fabric-gatsby5/./src/content/demo/free-drawing/code.js","webpack://fabric-gatsby5/./src/content/demo/free-drawing/FreeDrawingUI.jsx","webpack://fabric-gatsby5/./src/content/demo/free-drawing/index.md","webpack://fabric-gatsby5/./src/templates/demo.jsx"],"sourcesContent":["export const code = `\n  const $ = (id) => document.getElementById(id);\n\n  const canvas = new fabric.Canvas(canvasEl, {\n    isDrawingMode: true,\n  });\n\n  canvas.freeDrawingBrush = new fabric.PencilBrush(canvas);\n\n  fabric.Object.prototype.transparentCorners = false;\n\n  var drawingModeEl = $('drawing-mode'),\n    drawingOptionsEl = $('drawing-mode-options'),\n    drawingColorEl = $('drawing-color'),\n    drawingShadowColorEl = $('drawing-shadow-color'),\n    drawingLineWidthEl = $('drawing-line-width'),\n    drawingShadowWidth = $('drawing-shadow-width'),\n    drawingShadowOffset = $('drawing-shadow-offset'),\n    clearEl = $('clear-canvas');\n\n  clearEl.onclick = function () {\n    canvas.clear();\n  };\n\n  drawingModeEl.onclick = function () {\n    canvas.isDrawingMode = !canvas.isDrawingMode;\n    if (canvas.isDrawingMode) {\n      drawingModeEl.innerHTML = 'Cancel drawing mode';\n    } else {\n      drawingModeEl.innerHTML = 'Enter drawing mode';\n    }\n  };\n\n  if (fabric.PatternBrush) {\n    var vLinePatternBrush = new fabric.PatternBrush(canvas);\n    vLinePatternBrush.getPatternSrc = function () {\n      var patternCanvas = fabric.getEnv().document.createElement('canvas');\n      patternCanvas.width = patternCanvas.height = 10;\n      var ctx = patternCanvas.getContext('2d');\n\n      ctx.strokeStyle = this.color;\n      ctx.lineWidth = 5;\n      ctx.beginPath();\n      ctx.moveTo(0, 5);\n      ctx.lineTo(10, 5);\n      ctx.closePath();\n      ctx.stroke();\n\n      return patternCanvas;\n    };\n\n    var hLinePatternBrush = new fabric.PatternBrush(canvas);\n    hLinePatternBrush.getPatternSrc = function () {\n      var patternCanvas = fabric.getEnv().document.createElement('canvas');\n      patternCanvas.width = patternCanvas.height = 10;\n      var ctx = patternCanvas.getContext('2d');\n\n      ctx.strokeStyle = this.color;\n      ctx.lineWidth = 5;\n      ctx.beginPath();\n      ctx.moveTo(5, 0);\n      ctx.lineTo(5, 10);\n      ctx.closePath();\n      ctx.stroke();\n\n      return patternCanvas;\n    };\n\n    var squarePatternBrush = new fabric.PatternBrush(canvas);\n    squarePatternBrush.getPatternSrc = function () {\n      var squareWidth = 10,\n        squareDistance = 2;\n\n      var patternCanvas = fabric.getEnv().document.createElement('canvas');\n      patternCanvas.width = patternCanvas.height = squareWidth + squareDistance;\n      var ctx = patternCanvas.getContext('2d');\n\n      ctx.fillStyle = this.color;\n      ctx.fillRect(0, 0, squareWidth, squareWidth);\n\n      return patternCanvas;\n    };\n\n    var diamondPatternBrush = new fabric.PatternBrush(canvas);\n    diamondPatternBrush.getPatternSrc = function () {\n      var squareWidth = 10,\n        squareDistance = 5;\n      var patternCanvas = fabric.getEnv().document.createElement('canvas');\n      var rect = new fabric.Rect({\n        width: squareWidth,\n        height: squareWidth,\n        angle: 45,\n        fill: this.color,\n      });\n\n      var canvasWidth = rect.getBoundingRect().width;\n\n      patternCanvas.width = patternCanvas.height = canvasWidth + squareDistance;\n      rect.set({\n        left: canvasWidth / 2,\n        top: canvasWidth / 2,\n      });\n\n      var ctx = patternCanvas.getContext('2d');\n      rect.render(ctx);\n\n      return patternCanvas;\n    };\n\n    var img = new Image();\n    img.src = '../../assets/ladybug.png';\n\n    var texturePatternBrush = new fabric.PatternBrush(canvas);\n    texturePatternBrush.source = img;\n  }\n\n  $('drawing-mode-selector').onchange = function () {\n    if (this.value === 'hline') {\n      canvas.freeDrawingBrush = vLinePatternBrush;\n    } else if (this.value === 'vline') {\n      canvas.freeDrawingBrush = hLinePatternBrush;\n    } else if (this.value === 'square') {\n      canvas.freeDrawingBrush = squarePatternBrush;\n    } else if (this.value === 'diamond') {\n      canvas.freeDrawingBrush = diamondPatternBrush;\n    } else if (this.value === 'texture') {\n      canvas.freeDrawingBrush = texturePatternBrush;\n    } else {\n      canvas.freeDrawingBrush = new fabric[this.value + 'Brush'](canvas);\n    }\n\n    if (canvas.freeDrawingBrush) {\n      canvas.freeDrawingBrush.color = drawingColorEl.value;\n      canvas.freeDrawingBrush.width =\n        parseInt(drawingLineWidthEl.value, 10) || 1;\n      canvas.freeDrawingBrush.shadow = new fabric.Shadow({\n        blur: parseInt(drawingShadowWidth.value, 10) || 0,\n        offsetX: 0,\n        offsetY: 0,\n        affectStroke: true,\n        color: drawingShadowColorEl.value,\n      });\n    }\n  };\n\n  drawingColorEl.onchange = function () {\n    canvas.freeDrawingBrush.color = this.value;\n  };\n  drawingShadowColorEl.onchange = function () {\n    canvas.freeDrawingBrush.shadow.color = this.value;\n  };\n  drawingLineWidthEl.onchange = function () {\n    canvas.freeDrawingBrush.width = parseInt(this.value, 10) || 1;\n    this.previousSibling.querySelector('span').innerHTML = this.value;\n  };\n  drawingShadowWidth.onchange = function () {\n    canvas.freeDrawingBrush.shadow.blur = parseInt(this.value, 10) || 0;\n    this.previousSibling.querySelector('span').innerHTML = this.value;\n  };\n  drawingShadowOffset.onchange = function () {\n    canvas.freeDrawingBrush.shadow.offsetX = parseInt(this.value, 10) || 0;\n    canvas.freeDrawingBrush.shadow.offsetY = parseInt(this.value, 10) || 0;\n    this.previousSibling.querySelector('span').innerHTML = this.value;\n  };\n\n  if (canvas.freeDrawingBrush) {\n    canvas.freeDrawingBrush.color = drawingColorEl.value;\n    canvas.freeDrawingBrush.width = parseInt(drawingLineWidthEl.value, 10) || 1;\n    canvas.freeDrawingBrush.shadow = new fabric.Shadow({\n      blur: parseInt(drawingShadowWidth.value, 10) || 0,\n      offsetX: 0,\n      offsetY: 0,\n      affectStroke: true,\n      color: drawingShadowColorEl.value,\n    });\n  }\n`;\n","import { useEffect } from 'react';\n\n// placeholder to reactify the code\nexport const FreeDrawingUI = () => {\n  useEffect(() => {\n    document.getElementById('drawing-line-width').value = '30';\n    document.getElementById('drawing-color').value = '#76cef4';\n    document.getElementById('drawing-shadow-color').value = '#5a7896';\n    document.getElementById('drawing-shadow-width').value = '0';\n    document.getElementById('drawing-shadow-offset').value = '0';\n  }, []);\n  return null;\n};\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport './index.css';\nimport {code} from './code';\nimport {CodeEditor} from '../../../components/CodeEditor';\nimport {FreeDrawingUI} from './FreeDrawingUI';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(CodeEditor, {\n    code: code,\n    canvasId: \"c\"\n  }, React.createElement(\"div\", {\n    className: \"demo-body\"\n  }, React.createElement(\"canvas\", {\n    id: \"c\",\n    width: \"500\",\n    height: \"500\"\n  }), React.createElement(\"div\", {\n    id: \"drawing-mode-options\"\n  }, React.createElement(\"button\", {\n    id: \"drawing-mode\",\n    className: \"btn btn-info\"\n  }, \"Cancel drawing mode\"), React.createElement(\"button\", {\n    id: \"clear-canvas\",\n    className: \"btn btn-info\"\n  }, \"Clear\"), React.createElement(\"label\", {\n    htmlFor: \"drawing-mode-selector\"\n  }, React.createElement(_components.p, null, \"Mode:\"), React.createElement(\"select\", {\n    id: \"drawing-mode-selector\"\n  }, React.createElement(\"option\", null, \"Pencil\"), React.createElement(\"option\", null, \"Circle\"), React.createElement(\"option\", null, \"Spray\"), React.createElement(\"option\", null, \"Pattern\"), React.createElement(\"option\", null, \"hline\"), React.createElement(\"option\", null, \"vline\"), React.createElement(\"option\", null, \"square\"), React.createElement(\"option\", null, \"diamond\"), React.createElement(\"option\", null, \"texture\"))), React.createElement(\"label\", {\n    htmlFor: \"drawing-line-width\"\n  }, React.createElement(_components.p, null, \"Line width:\\n\", React.createElement(\"span\", {\n    className: \"info\"\n  }, \"30\")), React.createElement(\"input\", {\n    type: \"range\",\n    min: \"0\",\n    max: \"150\",\n    id: \"drawing-line-width\"\n  })), React.createElement(\"label\", {\n    htmlFor: \"drawing-color\"\n  }, React.createElement(_components.p, null, \"Line color:\"), React.createElement(\"input\", {\n    type: \"color\",\n    id: \"drawing-color\"\n  })), React.createElement(\"label\", {\n    htmlFor: \"drawing-shadow-color\"\n  }, React.createElement(_components.p, null, \"Shadow color:\"), React.createElement(\"input\", {\n    type: \"color\",\n    id: \"drawing-shadow-color\"\n  })), React.createElement(\"label\", {\n    htmlFor: \"drawing-shadow-width\"\n  }, React.createElement(_components.p, null, \"Shadow width:\\n\", React.createElement(\"span\", {\n    className: \"info\"\n  }, \"0\")), React.createElement(\"input\", {\n    type: \"range\",\n    min: \"0\",\n    max: \"50\",\n    id: \"drawing-shadow-width\"\n  })), React.createElement(\"label\", {\n    htmlFor: \"drawing-shadow-offset\"\n  }, React.createElement(_components.p, null, \"Shadow offset:\\n\", React.createElement(\"span\", {\n    className: \"info\"\n  }, \"0\")), React.createElement(\"input\", {\n    type: \"range\",\n    min: \"0\",\n    max: \"50\",\n    id: \"drawing-shadow-offset\"\n  }))))), \"\\n\", React.createElement(FreeDrawingUI));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/fabricjs.github.io/fabricjs.github.io/src/content/demo/free-drawing/index.md\";\nimport React from 'react';\nimport {graphql, Link} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport LayoutFullWidth from '../components/layoutFullWidth';\nimport GithubEditLink from '../components/githubEditLink/githubEditLink';\nimport PrevNextLinks from '../components/prevNextPostLinks/prevNextLinks';\nimport Seo from '../components/seo';\nfunction Demo({data, pageContext, children}) {\n  const {frontmatter, mdFile} = data.demoPage;\n  return React.createElement(LayoutFullWidth, null, React.createElement(Seo, {\n    title: frontmatter.title\n  }), React.createElement(\"nav\", {\n    id: \"breadcrumb-nav\",\n    \"aria-label\": \"breadcrumb\"\n  }, React.createElement(Link, {\n    to: \"/demos\"\n  }, \"Demos\"), \" > \", React.createElement(\"span\", null, frontmatter.title)), React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"article\", null, children), React.createElement(GithubEditLink, {\n    relativePath: mdFile.relativePath\n  }), React.createElement(PrevNextLinks, {\n    prev: pageContext.prev || ({\n      title: 'All FabricJS demos',\n      slug: '/demos'\n    }),\n    next: pageContext.next\n  }));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Demo, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($slug: String!) {\n    demoPage: mdx(fields: { slug: { eq: $slug } }) {\n      frontmatter {\n        title\n      }\n      mdFile: parent {\n        ... on File {\n          relativePath\n        }\n      }\n    }\n  }\n`;\nDemo.propTypes = {\n  data: PropTypes.shape({\n    demoPage: PropTypes.object\n  }).isRequired,\n  children: PropTypes.any,\n  pageContext: PropTypes.shape({\n    prev: PropTypes.shape({\n      title: PropTypes.string,\n      slug: PropTypes.string\n    }),\n    next: PropTypes.shape({\n      title: PropTypes.string,\n      slug: PropTypes.string\n    })\n  }).isRequired\n};\n"],"names":["code","FreeDrawingUI","useEffect","document","getElementById","value","_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","React","CodeEditor","canvasId","className","id","width","height","htmlFor","type","min","max","wrapper","MDXLayout","Demo","_ref","data","pageContext","children","frontmatter","mdFile","demoPage","LayoutFullWidth","Seo","title","Link","to","GithubEditLink","relativePath","PrevNextLinks","prev","slug","next","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}