{"version":3,"file":"component---src-templates-demos-jsx-55a09ba4ef8343338e11.js","mappings":"0LAIe,SAASA,EAAaC,GAAgB,IAAf,SAAEC,GAAUD,EAChD,OAAOE,EAAAA,cAAA,MAAIC,UAAU,aAAaF,EACpC,C,wBCEe,SAASG,EAAKJ,GAAY,IAAX,KAAEK,GAAML,EAGpC,OACEE,EAAAA,cAACI,EAAAA,EAAM,CAACC,QAAM,GACZL,EAAAA,cAACM,EAAAA,EAAG,CAACC,MAAM,mBACXP,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,KACEQ,MAAO,CAAE,aAAc,WACpBL,EAAKM,eAAeC,WAApBP,sFACLH,EAAAA,cAACH,EAAa,KACXM,EAAKM,eAAeE,UAAUC,KAC7BC,IAC0B,IAAxB,YAAEC,EAAW,OAAEC,GAAQF,EAAA,OAEvBb,EAAAA,cAAA,MAAIgB,IAAKD,EAAOE,MACdjB,EAAAA,cAACkB,EAAAA,EAAa,CACZX,MAAOO,EAAYP,MACnBY,YAAaL,EAAYK,YACzBC,cAAeL,EAAOE,KACtBI,WAAW,YACXC,eACER,EAAYS,UACRT,EAAYS,UAAUC,gBAAgBC,gBACtC,OAGL,KAMjB,C","sources":["webpack://fabric-gatsby5/./src/components/list/thumbnailList.jsx","webpack://fabric-gatsby5/./src/templates/demos.jsx"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport './thumbnailList.css'\n\nexport default function ThumbnailList({ children }) {\n  return <ul className=\"thumbList\">{children}</ul>\n}\n\nThumbnailList.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport Layout from '../components/layoutFullWidth';\nimport ThumbnailList from '../components/list/thumbnailList';\nimport ThumbnailCard from '../components/card/thumbnailCard';\nimport Seo from '../components/seo';\n\nexport default function Demos({ data }) {\n  const pageDesc =\n    'Awesome demos portraying various interactive aspects and capabilities of FabricJS';\n  return (\n    <Layout darkBg>\n      <Seo title=\"FabricJS demos\" />\n      <h1>FabricJS Demos</h1>\n      <p\n        style={{ 'text-align': 'center' }}\n      >{`${data.allDemoPagesMD.totalCount} ${pageDesc}`}</p>\n      <ThumbnailList>\n        {data.allDemoPagesMD.demoPages.map(\n          (\n            { frontmatter, fields } // map((demoPage)=>(\n          ) => (\n            <li key={fields.slug}>\n              <ThumbnailCard\n                title={frontmatter.title}\n                description={frontmatter.description}\n                linkToUrlSlug={fields.slug}\n                buttonText=\"View demo\"\n                gatsbyImgFluid={\n                  frontmatter.thumbnail\n                    ? frontmatter.thumbnail.childImageSharp.gatsbyImageData\n                    : null\n                }\n              />\n            </li>\n          )\n        )}\n      </ThumbnailList>\n    </Layout>\n  );\n}\n\n// Programmatically create pages from data -- https://www.gatsbyjs.org/tutorial/part-seven/\n// Adding markdown pages -- https://www.gatsbyjs.org/docs/adding-markdown-pages/\n// Working with Images in Markdown Posts and Pages -- https://www.gatsbyjs.org/docs/working-with-images-in-markdown/\n\n// eslint-disable-next-line max-len\n// note that we ignore fetching sub-posts in this query coz we do not want to list sub-posts when listing projects\n// Sub-posts will b accessible from the page of the relevant post they belong to\nexport const query = graphql`\n  query allDemoPagesMD {\n    allDemoPagesMD: allMdx(\n      filter: {\n        internal: {\n          contentFilePath: { regex: \"//demo/[a-zA-Z0-9-]+/index.md$/\" }\n        }\n      }\n      sort: { frontmatter: { title: ASC } }\n    ) {\n      totalCount\n      demoPages: nodes {\n        frontmatter {\n          title\n          description\n          thumbnail {\n            childImageSharp {\n              gatsbyImageData(width: 400, layout: CONSTRAINED)\n            }\n          }\n        }\n        fields {\n          slug\n        }\n        internal {\n          contentFilePath\n        }\n      }\n    }\n  }\n`;\n\nDemos.propTypes = {\n  data: PropTypes.shape({\n    // eslint-disable-next-line react/forbid-prop-types\n    allDemoPagesMD: PropTypes.object,\n  }).isRequired,\n};\n"],"names":["ThumbnailList","_ref","children","React","className","Demos","data","Layout","darkBg","Seo","title","style","allDemoPagesMD","totalCount","demoPages","map","_ref2","frontmatter","fields","key","slug","ThumbnailCard","description","linkToUrlSlug","buttonText","gatsbyImgFluid","thumbnail","childImageSharp","gatsbyImageData"],"sourceRoot":""}