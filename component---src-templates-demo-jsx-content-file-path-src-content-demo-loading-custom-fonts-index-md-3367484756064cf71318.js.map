{"version":3,"file":"component---src-templates-demo-jsx-content-file-path-src-content-demo-loading-custom-fonts-index-md-3367484756064cf71318.js","mappings":"mMAAO,MAAMA,EAAI,ipECKjB,SAASC,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,EAAG,IACHC,OAAQ,SACRC,KAAM,SACLC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,oFAAqFM,EAAAA,cAAoBT,EAAYI,EAAG,CAChNM,KAAM,yEACL,uBAAwB,qYAAsY,KAAMD,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,uIAAwIM,EAAAA,cAAoBT,EAAYI,EAAG,CACznBM,KAAM,iDACL,uBAAwB,KAAMD,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,8ZAA+ZM,EAAAA,cAAoBT,EAAYK,OAAQ,KAAM,kCAAmC,OAAQI,EAAAA,cAAoBT,EAAYK,OAAQ,KAAM,+BAAgC,wEAAyE,KAAMI,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,mVAAoVM,EAAAA,cAAoBT,EAAYM,KAAM,CAChoCK,wBAAyB,CACvBC,OAAQ,6CAER,wGAAyG,KAAM,KAAMH,EAAAA,cAAoBI,EAAAA,EAAY,CACvJhB,KAAMA,EACNiB,SAAU,KACTL,EAAAA,cAAoB,SAAU,CAC/BM,MAAO,MACPC,OAAQ,MACRC,GAAI,OAER,CAKA,MAJA,SAAoBlB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOmB,QAASC,GAAalB,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOW,EAAYV,EAAAA,cAAoBU,EAAWpB,EAAOU,EAAAA,cAAoBX,EAAmBC,IAAUD,EAAkBC,EAC9H,E,kDCxBA,SAASqB,EAAIC,GAAgC,IAA/B,KAACC,EAAI,YAAEC,EAAW,SAAEC,GAASH,EACzC,MAAM,YAACI,EAAW,OAAEC,GAAUJ,EAAKK,SACnC,OAAOlB,EAAAA,cAAoBmB,EAAAA,EAAiB,KAAMnB,EAAAA,cAAoBoB,EAAAA,EAAK,CACzEC,MAAOL,EAAYK,QACjBrB,EAAAA,cAAoB,MAAO,CAC7BQ,GAAI,iBACJ,aAAc,cACbR,EAAAA,cAAoBsB,EAAAA,GAAM,CAC3BC,GAAI,UACH,SAAU,MAAOvB,EAAAA,cAAoB,OAAQ,KAAMgB,EAAYK,QAASrB,EAAAA,cAAoB,KAAM,KAAMgB,EAAYK,OAAQrB,EAAAA,cAAoB,UAAW,KAAMe,GAAWf,EAAAA,cAAoBwB,EAAAA,EAAgB,CACjNC,aAAcR,EAAOQ,eACnBzB,EAAAA,cAAoB0B,EAAAA,EAAe,CACrCC,KAAMb,EAAYa,MAAS,CACzBN,MAAO,qBACPO,KAAM,UAERC,KAAMf,EAAYe,OAEtB,CACe,SAASC,EAAiBxC,GACvC,OAAOU,EAAAA,cAAoBW,EAAMrB,EAAOU,EAAAA,cAAoB+B,EAAqBzC,GACnF,C","sources":["webpack://fabric-gatsby5/./src/content/demo/loading-custom-fonts/code.js","webpack://fabric-gatsby5/./src/content/demo/loading-custom-fonts/index.md","webpack://fabric-gatsby5/./src/templates/demo.jsx"],"sourcesContent":["export const code = `\n  const urlMap = {\n    VT323:\n      'url(https://fonts.gstatic.com/s/vt323/v17/pxiKyp0ihIEF2isfFJXUdVNF.woff2)',\n    Pacifico:\n      'url(https://fonts.gstatic.com/s/pacifico/v22/FwZY7-Qmy14u9lezJ-6H6MmBp0u-.woff2)',\n    Lato100:\n      'url(https://fonts.gstatic.com/s/lato/v24/S6u8w4BMUTPHh30AXC-qNiXg7Q.woff2)',\n    Lato900:\n      'url(https://fonts.gstatic.com/s/lato/v24/S6u9w4BMUTPHh50XSwiPGQ3q5d0.woff2)',\n  };\n  const canvas = new fabric.Canvas(canvasEl);\n  // correctly instantiate new Fontfaces\n  const fontVT323 = new FontFace('VT323', urlMap.VT323, {\n    style: 'normal',\n    weight: 'normal',\n  });\n  const fontPacifico = new FontFace('Pacifico', urlMap.Pacifico, {\n    style: 'normal',\n    weight: 'normal',\n  });\n\n  const Lato100 = new FontFace('Lato', urlMap.Lato100, {\n    style: 'normal',\n    weight: '100',\n  });\n\n  const Lato900 = new FontFace('Lato', urlMap.Lato900, {\n    style: 'normal',\n    weight: '900',\n  });\n  // wait for them to load\n  Promise.all([\n    fontVT323.load(),\n    fontPacifico.load(),\n    Lato100.load(),\n    Lato900.load(),\n  ]).then(() => {\n    // add the css to the document for those loaded fonts\n    document.fonts.add(fontPacifico);\n    document.fonts.add(fontVT323);\n    document.fonts.add(Lato100);\n    document.fonts.add(Lato900);\n    // create the textboxes\n    const pacifico = new fabric.Textbox('Correctly loaded Pacifico', {\n      left: 50,\n      top: 10,\n      width: 200,\n      fontSize: 60,\n      fontFamily: 'Pacifico',\n    });\n    const vt323 = new fabric.Textbox('Correctly loaded Pacifico', {\n      left: 350,\n      top: 10,\n      width: 200,\n      fontSize: 60,\n      fontFamily: 'VT323',\n    });\n    const lato100 = new fabric.Textbox('Correctly loaded lato100', {\n      left: 350,\n      top: 310,\n      width: 200,\n      fontSize: 60,\n      fontWeight: '100',\n      fontFamily: 'Lato',\n    });\n    const lato900 = new fabric.Textbox('Correctly loaded lato900', {\n      left: 50,\n      top: 310,\n      width: 200,\n      fontSize: 60,\n      fontWeight: '900',\n      fontFamily: 'Lato',\n    });\n    canvas.add(pacifico, vt323, lato100, lato900);\n  });\n`;\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {CodeEditor} from '../../../components/CodeEditor';\nimport {code} from './code';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    strong: \"strong\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"When working with custom fonts on a fabric canvas, it is recommended to\\nuse the \", React.createElement(_components.a, {\n    href: \"https://developer.mozilla.org/en-US/docs/Web/API/CSS_Font_Loading_API\"\n  }, \"CSS Font loader api\"), \".\\nNot doing so will make your app do FOUT(s) (Flash of Unstyled Text).\\nThis happens because font loading involve network and is async by nature, and so when you will be adding a text object with a custom font, or switching font, the canvas will try to render before the font has been actually loaded and so the browser will fallback on the specified fallback font or the default one.\"), \"\\n\", React.createElement(_components.p, null, \"If for some reason your target browsers do not support that api yet you can pick from a selection of font preloading libraries like \", React.createElement(_components.a, {\n    href: \"https://github.com/bramstein/fontfaceobserver\"\n  }, \"Font Face Observer\")), \"\\n\", React.createElement(_components.p, null, \"In this example we are using the browser native CSS Font loader api to load 2 google fonts from google's cdn.\\nWe load the font, then we create a textbox and then use the loaded font family. Note that you could create the textbox, add them to canvas and just re-render when the font is loaded, doing so you would have saved in FabricJS cache some values calculated with the font not correctly loaded and likely \", React.createElement(_components.strong, null, \"have cursor positioning issues\"), \" or \", React.createElement(_components.strong, null, \"wrong bounding boxes issues\"), \". Always assign the font family after the font has correctly loaded.\"), \"\\n\", React.createElement(_components.p, null, \"When dealing with fonts with multiple weights and styles is easier to assign a different font family to each of them and just use different font families, in the example's code we do show how to load different weights with the same family name, but be aware that one font file has one family, one weight and one style. Loading the font \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Lato</code>\"\n    }\n  }), \" doesn't grant you access to all variants of the fonts, but just one. there is one file per variant.\"), \"\\n\", \"\\n\", React.createElement(CodeEditor, {\n    code: code,\n    canvasId: \"c\"\n  }, React.createElement(\"canvas\", {\n    width: \"600\",\n    height: \"600\",\n    id: \"c\"\n  })));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/fabricjs.github.io/fabricjs.github.io/src/content/demo/loading-custom-fonts/index.md\";\nimport React from 'react';\nimport {graphql, Link} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport LayoutFullWidth from '../components/layoutFullWidth';\nimport GithubEditLink from '../components/githubEditLink/githubEditLink';\nimport PrevNextLinks from '../components/prevNextPostLinks/prevNextLinks';\nimport Seo from '../components/seo';\nfunction Demo({data, pageContext, children}) {\n  const {frontmatter, mdFile} = data.demoPage;\n  return React.createElement(LayoutFullWidth, null, React.createElement(Seo, {\n    title: frontmatter.title\n  }), React.createElement(\"nav\", {\n    id: \"breadcrumb-nav\",\n    \"aria-label\": \"breadcrumb\"\n  }, React.createElement(Link, {\n    to: \"/demos\"\n  }, \"Demos\"), \" > \", React.createElement(\"span\", null, frontmatter.title)), React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"article\", null, children), React.createElement(GithubEditLink, {\n    relativePath: mdFile.relativePath\n  }), React.createElement(PrevNextLinks, {\n    prev: pageContext.prev || ({\n      title: 'All FabricJS demos',\n      slug: '/demos'\n    }),\n    next: pageContext.next\n  }));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Demo, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($slug: String!) {\n    demoPage: mdx(fields: { slug: { eq: $slug } }) {\n      frontmatter {\n        title\n      }\n      mdFile: parent {\n        ... on File {\n          relativePath\n        }\n      }\n    }\n  }\n`;\nDemo.propTypes = {\n  data: PropTypes.shape({\n    demoPage: PropTypes.object\n  }).isRequired,\n  children: PropTypes.any,\n  pageContext: PropTypes.shape({\n    prev: PropTypes.shape({\n      title: PropTypes.string,\n      slug: PropTypes.string\n    }),\n    next: PropTypes.shape({\n      title: PropTypes.string,\n      slug: PropTypes.string\n    })\n  }).isRequired\n};\n"],"names":["code","_createMdxContent","props","_components","Object","assign","p","a","strong","span","_provideComponents","components","React","href","dangerouslySetInnerHTML","__html","CodeEditor","canvasId","width","height","id","wrapper","MDXLayout","Demo","_ref","data","pageContext","children","frontmatter","mdFile","demoPage","LayoutFullWidth","Seo","title","Link","to","GithubEditLink","relativePath","PrevNextLinks","prev","slug","next","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}